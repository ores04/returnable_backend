from supabase import Client

from server.core.service.supabase_connectors.supabase_client import get_supabase_client

RAG_DOCUMENTS_TABLE_NAME = "RAG_DOCUMENTS"
RAG_DOCUMENT_SEGMENTS_TABLE_NAME = "RAG_DOCUMENTS_SECTIONS"
RAG_DOCUMENTS_METADATA_TABLE_NAME = "RAG_DOCUMENT_META_DATA_VALUE"


def add_document_to_db(jwt_token: str | None, document_data: dict, supabase_client: Client = None, uuid: str = None) -> str:
    """ The document data must be of the following structure:
    {
    id: int (auto generated by supabase, do not set),
    name: str,
    owner_id: str (will be overridden form the jwt token,
    document_segments: [{
        id: int (auto generated by supabase, do not set),
        document_id: int (will be overridden by the id of the parent document),
        embedding: list[float)}
    ]}

    returns the id of the created document"""
    assert jwt_token or supabase_client, "Either jwt_token or service_client must be set"
    parent_doc_dict = document_data.copy()
    if "document_segments" in parent_doc_dict:
        del parent_doc_dict["document_segments"]
    required_fields = ["name"]
    for field in required_fields:
        if field not in parent_doc_dict:
            raise ValueError(f"Missing required field: {field}")
    if jwt_token:
        supabase_client = get_supabase_client(jwt_token=jwt_token)
        uuid = supabase_client.auth.get_user(jwt_token).user.id
    parent_doc_dict["owner_id"] = uuid

    response = supabase_client.table(RAG_DOCUMENTS_TABLE_NAME).insert(parent_doc_dict).execute()
    response.raise_when_api_error(response)

    document_id = response.data[0]["id"]
    # add the segments
    for segment in document_data.get("document_segments", []):
        segment_dict = segment.copy()
        if "id" in segment_dict:
            del segment_dict["id"]
        segment_dict["document_id"] = document_id
        if "embedding" in segment_dict:
            segment_dict["embedding"] = str(segment_dict["embedding"])

        response = supabase_client.table(RAG_DOCUMENT_SEGMENTS_TABLE_NAME).insert(segment_dict).execute()
        response.raise_when_api_error(response)

    return document_id


def add_keywords_to_db(jwt_token: str, document_data: dict, supabase_client: Client = None):
    """ Add the keywords document to the database."""
    # assert that the doc has the following fields: embedding (list of float), name (str)
    assert jwt_token or supabase_client, "Either jwt_token or service_client must be set"
    required_fields = ["embedding", "name", "document_id"]
    for field in required_fields:
        if field not in document_data:
            raise ValueError(f"Missing required field: {field}")

    if jwt_token:
        supabase_client = get_supabase_client(jwt_token=jwt_token)

    response = supabase_client.table(RAG_DOCUMENTS_METADATA_TABLE_NAME).insert(document_data).execute()
    response.raise_when_api_error(response)

    return response.data
